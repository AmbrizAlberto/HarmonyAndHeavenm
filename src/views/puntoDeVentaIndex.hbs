<!DOCTYPE html>
<html lang="es">
<head>
    <link rel="stylesheet" href="/css/renderPunto.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    
<header>
    <a href="/login/user/master/view/">H&H</a>
</header>

<div class="mainPv">
    <div class="leftSidePunto">
        <div class="listProductsPunto" >
            {{#each products}}
                <div class="productSellCard">
                    <img src={{foto}} alt="">
                    <h1>{{modelo}}</h1>
                    <h2>{{precioPublico}}$</h2>
                    <h3>{{unidades}} unidades</h3>
                    <button onclick="add('{{modelo}}', {{precioPublico}}, {{unidades}}, {{id}})">Add</button>
                    <!-- Agregamos el ID del producto como un parámetro en la función "add" -->
                </div>
            {{/each}}
        </div>
    </div>
    <div class="checkProducts">
        <div class="allProducts"></div>
        <div class="totalPrice">
            <div class="pricefinal">
                <h2>Total</h2>
                <h3>0$</h3>
            </div>
        </div>
        <div class="btn-check">
            <button onclick="checkout()">Check Out</button>
        </div>
    </div>
</div>

<script>
    let selectedProducts = [];
    let selectedProductIds = []; // Variable para almacenar los IDs de los productos seleccionados
    let totalPrice = 0;

    function add(modelo, precioPublico, unidades, productId) {
        const existingProduct = selectedProducts.find(product => product.modelo === modelo);

        if (existingProduct) {
            if (existingProduct.unidades + 1 <= unidades) {
                existingProduct.unidades++;
            } else {
                alert('No hay suficientes unidades disponibles en stock para ' + modelo);
            }
        } else {
            selectedProducts.push({ modelo, precioPublico, unidades: 1 });
            selectedProductIds.push(productId); // Agregamos el ID del producto
        }

        updateAllProductsList();
        calculateTotalPrice();
    }

    function updateAllProductsList() {
        const allProductsDiv = document.querySelector('.allProducts');
        allProductsDiv.innerHTML = '';

        selectedProducts.forEach(product => {
            const productInfo = document.createElement('div');
            productInfo.classList.add('product-info');
            productInfo.innerHTML = `<p class="product-name">${product.modelo} - ${product.precioPublico}$ (${product.unidades}x)</p>`;
            allProductsDiv.appendChild(productInfo);
        });
    }

    function calculateTotalPrice() {
        totalPrice = selectedProducts.reduce((total, product) => total + product.precioPublico * product.unidades, 0);
        const pricefinal = document.querySelector('.pricefinal');
        pricefinal.querySelector('h3').textContent = totalPrice + '$';
    }

    function checkout() {
    if (selectedProducts.length === 0) {
        alert('No hay productos seleccionados.');
        return;
    }

    const data = new URLSearchParams();
    data.append('total', totalPrice);

    // Crear un objeto para rastrear los IDs de productos y la cantidad vendida
    const productSales = {};

    // Recorrer los productos seleccionados
    selectedProducts.forEach(product => {
    const productId = product.id; // Supongo que tienes una propiedad 'id' en tus objetos de producto
    const quantitySold = product.unidades;

    if (productSales[productId]) {
        productSales[productId] += quantitySold;
    } else {
        productSales[productId] = quantitySold;
    }
});


    // Agregar los IDs y la cantidad vendida al objeto de datos
    for (const productId in productSales) {
        data.append('productSales[]', productId + ',' + productSales[productId]);
    }

    console.log('Total:', data.get('total'));

    fetch('/guardar-venta', {
        method: 'POST',
        body: data
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Venta exitosa. Total: ' + totalPrice + '$');
            // Puedes realizar otras acciones aquí, como borrar la lista de productos seleccionados, etc.
        } else {
            alert('Error al guardar la venta: ' + data.message);
        }
    })
    .catch(error => {
        console.error('Error en la solicitud: ' + error);
    });
    // Ahora puedes enviar los datos al servidor
}

</script>
</body>
</html>
